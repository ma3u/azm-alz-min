# Azure Landing Zone Components Configuration
# This file defines which components are enabled/disabled across both Bicep and Terraform implementations

metadata:
  version: "1.0.0"
  description: "Centralized configuration for Azure Landing Zone components"
  author: "Azure Landing Zone Team"
  lastUpdated: "2025-10-08"

# Global Configuration
global:
  environment: "sandbox" # sandbox, dev, test, prod
  organizationPrefix: "alz" # 2-10 character prefix
  location: "westeurope" # Primary Azure region
  subscriptionId: "" # Override if needed

# Network Configuration
networking:
  hubVnet:
    enabled: true
    addressSpace: "10.0.0.0/16"
    subnets:
      bastion: "10.0.1.0/24"
      sharedServices: "10.0.3.0/24"
      privateEndpoints: "10.0.4.0/24"
      gateway: "10.0.100.0/24"

  spokeVnet:
    enabled: true
    addressSpace: "10.1.0.0/16"
    subnets:
      webApps: "10.1.2.0/24"
      containerApps: "10.1.3.0/24"
      functions: "10.1.4.0/26"
      aks: "10.1.20.0/22" # Large subnet for AKS (1024 IPs)
      postgresql: "10.1.10.0/26"
      privateEndpoints: "10.1.11.0/24"

  managementSpoke:
    enabled: false # Future expansion
    addressSpace: "10.2.0.0/16"

  peering:
    enabled: true
    allowForwardedTraffic: true
    allowGatewayTransit: false

# Security Components
security:
  azureFirewall:
    enabled: false # Premium firewall with IDPS
    sku: "Premium" # Standard, Premium
    tier: "Premium"
    threatIntelligence: true
    idps: true # Intrusion Detection and Prevention
    tlsInspection: true

  azureBastion:
    enabled: false # For secure RDP/SSH access
    sku: "Standard" # Basic, Standard

  privateDnsResolver:
    enabled: false # For hybrid DNS resolution

  entraPrivateAccess:
    enabled: false # Zero Trust network access
    connectors: 1

# Identity and Access Management
identity:
  managedIdentity:
    systemAssigned: true # Enable for all services
    userAssigned: false # Create dedicated managed identities

  keyVault:
    enabled: true
    sku: "standard" # standard, premium (HSM)
    softDeleteEnabled: true
    purgeProtectionEnabled: true
    rbacEnabled: true # Use RBAC instead of access policies
    networkAccess: "public" # public, private (for sandbox testing)

# Application Services
applications:
  webApps:
    enabled: true
    servicePlan:
      sku: "B1" # F1 (Free), B1, S1, P1v2
      os: "Linux"
    vnetIntegration: true
    httpsOnly: true
    minTlsVersion: "1.2"

  containerApps:
    enabled: false
    environment:
      name: "cae-{org}-{env}"
      internalLoadBalancerEnabled: false
    workloadProfiles: "Consumption" # Consumption, D4, D8, etc.

  functions:
    enabled: false
    plan: "Premium" # Consumption, Premium, Dedicated
    runtime: "dotnet" # dotnet, node, python, java
    version: "8"

# Container Services
containers:
  containerRegistry:
    enabled: true
    sku: "Premium" # Basic, Standard, Premium
    adminEnabled: false
    publicNetworkAccess: false # Enable private endpoints
    geoReplication: false # Enable for disaster recovery
    vulnerabilityScanning: true # Microsoft Defender for Containers
    contentTrust: true # Image signing

  aks:
    enabled: false # Enable Azure Kubernetes Service
    version: "1.30" # Kubernetes version
    tier: "Free" # Free, Standard (SLA)

    # Cluster Configuration
    privateCluster: true # No public API endpoint
    privateClusterPublicFqdn: false
    privateDnsZone: "System" # System, BringYourOwn, None

    # Node Pools
    systemNodePool:
      nodeCount: 2
      minCount: 1
      maxCount: 5
      vmSize: "Standard_d4s_v5" # Approved enterprise sizes
      autoScaling: true
      maxPods: 30
      osDiskSizeGB: 128

    userNodePool:
      enabled: true
      nodeCount: 2
      minCount: 0
      maxCount: 10
      vmSize: "Standard_d4s_v5"
      autoScaling: true
      maxPods: 30
      labels:
        workload: "applications"

    # Add-ons and Features
    networkPlugin: "azure" # azure, kubenet
    networkPolicy: "azure" # azure, calico
    dnsServiceIP: "10.1.0.10"
    dockerBridgeCidr: "172.17.0.1/16"
    serviceCidr: "10.1.0.0/16"

    # Security Features
    rbacEnabled: true
    azureAdIntegration: false # Enable Azure AD integration
    localAccountDisabled: false # Disable local accounts
    runCommandEnabled: true # For troubleshooting

    # Monitoring
    omsAgent: true # Container Insights
    httpApplicationRouting: false # Not recommended for production

# Data Services
data:
  postgresql:
    enabled: false
    sku: "B_Standard_B1ms" # Burstable, GeneralPurpose, MemoryOptimized
    version: "13" # 11, 12, 13, 14, 15
    storageMB: 32768 # Minimum 32GB
    backupRetentionDays: 7
    geoRedundantBackup: false
    highAvailability: false # Zone-redundant HA
    vnetIntegration: true # Private networking

  storageAccount:
    enabled: true
    kind: "StorageV2"
    tier: "Standard" # Standard, Premium
    replication: "LRS" # LRS, GRS, ZRS, GZRS
    accessTier: "Hot" # Hot, Cool
    httpsOnly: true
    minTlsVersion: "TLS1_2"
    blobPublicAccess: false
    allowSharedKeyAccess: true # For sandbox, false for production

    # Blob Storage Configuration
    blobServices:
      changeFeedEnabled: true
      versioningEnabled: true
      deleteRetentionDays: 7
      containerDeleteRetentionDays: 7

# Monitoring and Observability
monitoring:
  logAnalytics:
    enabled: true
    sku: "PerGB2018"
    retentionDays: 30 # 30-730 days

  applicationInsights:
    enabled: false
    type: "web" # web, other

  sentinelSiem:
    enabled: false # Microsoft Sentinel

  defender:
    enabled: false # Microsoft Defender for Cloud

  networkWatcher:
    enabled: false # Network monitoring
    flowLogs: false # NSG flow logs

# Cost Optimization
costOptimization:
  # Development Environment Overrides
  dev:
    containerRegistry:
      sku: "Basic" # Reduce from Premium
    webApps:
      servicePlan:
        sku: "F1" # Free tier
    storageAccount:
      replication: "LRS" # Local redundancy only
    postgresql:
      sku: "B_Standard_B1ms" # Burstable tier

  # Production Environment Defaults
  prod:
    containerRegistry:
      sku: "Premium"
      geoReplication: true
    webApps:
      servicePlan:
        sku: "P1v3" # Production tier
    storageAccount:
      replication: "GRS" # Geo-redundant
    postgresql:
      sku: "GP_Standard_D2s_v3" # General Purpose
      highAvailability: true

# Integration Settings
integration:
  # DevOps Integration
  github:
    actionsEnabled: true
    secretsManagement: "keyVault" # pragma: allowlist secret

  azureDevOps:
    enabled: false
    serviceConnections: true

  # Infrastructure as Code
  terraform:
    stateBackend: "azurerm" # local, azurerm, s3
    stateResourceGroup: "rg-{org}-terraform-state"
    stateStorageAccount: "st{org}tfstate"
    stateContainerName: "tfstate"

  bicep:
    moduleRegistry: "public" # public, private
    avmModules: true # Use Azure Verified Modules

# Environment-Specific Overrides
environments:
  sandbox:
    security:
      keyVault:
        networkAccess: "public" # Allow public access for testing
    applications:
      webApps:
        servicePlan:
          sku: "B1"
    containers:
      containerRegistry:
        sku: "Standard" # Cost optimization
        publicNetworkAccess: true # For easier testing

  dev:
    inherits: "sandbox"
    applications:
      webApps:
        servicePlan:
          sku: "S1"

  test:
    inherits: "dev"
    data:
      postgresql:
        backupRetentionDays: 14

  prod:
    security:
      azureFirewall:
        enabled: true
      keyVault:
        networkAccess: "private"
        sku: "premium"
    monitoring:
      sentinelSiem:
        enabled: true
      defender:
        enabled: true
    data:
      postgresql:
        backupRetentionDays: 35
        highAvailability: true
        geoRedundantBackup: true

# Validation Rules
validation:
  required:
    - "global.environment"
    - "global.organizationPrefix"
    - "global.location"

  constraints:
    organizationPrefix:
      minLength: 2
      maxLength: 10
      pattern: "^[a-z0-9]+$"

    environment:
      allowedValues: ["sandbox", "dev", "test", "prod"]

    location:
      allowedValues:
        - "westeurope"
        - "northeurope"
        - "eastus"
        - "eastus2"
        - "westus2"
